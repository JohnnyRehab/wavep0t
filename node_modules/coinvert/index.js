
process.env.NODE_TLS_REJECT_UNAUTHORIZED = "0";

var Decimal = require('decimal.js');
var request = require('request');

var satoshi = new Decimal(100000000);
// https://dogeapi.com/wow/v2/?a=get_current_price&convert_to=USD&amount_doge=5717696.72608592
// b4a5-09d1-a9c0-f1c4
// /api/v1/get_current_price/?api_key=API KEY&price_base=BASE CURRENCY

function getDogePriceUsd(fn){
  request.get({
    url: 'https://block.io/api/v1/get_current_price/?api_key=b4a5-09d1-a9c0-f1c4&price_base=USD',
    json: true
  }, function(err, res, body){
    if (err) return fn(err);

    try {
      var amt = new Decimal(body.data.prices[0].price);
    } catch(e) {
      return fn(e);
    }

    fn(null, amt);
  });
}

function getDogePriceBtc(fn){
  request.get({
    url: 'https://block.io/api/v1/get_current_price/?api_key=b4a5-09d1-a9c0-f1c4&price_base=BTC',
    json: true
  }, function(err, res, body){
    if (err) return fn(err);

    try {
      var amt = new Decimal(body.data.prices[0].price);
    } catch(e) {
      return fn(e);
    }

    fn(null, amt);
  });
}

function getDogeToBtc(coins, fn){
  request.get({
    url: 'https://dogeapi.com/wow/v2/?a=get_current_price&convert_to=BTC&amount_doge=' + coins,
    json: true
  }, function(err, res, body){
    if (err) return fn(err);

    try {
      var amt = new Decimal(body.data.amount);
    } catch(e) {
      return fn(e);
    }

    fn(null, amt);
  });
}

// http://dogechain.info/chain/Dogecoin/q/getreceivedbyaddress/DTnt7VZqR5ofHhAxZuDy4m3PhSjKFXpw3e

function getDogeReceivedByAddress(address, fn){
  request.get({
    url: 'http://dogechain.info/chain/Dogecoin/q/getreceivedbyaddress/' + address
  }, function(err, res, body){
    if (err) return fn(err);

    try {
      var amt = new Decimal(body);
    } catch(e) {
      return fn(e);
    }

    fn(null, amt);
  });
}
/*
getDogeReceivedByAddress('DTnt7VZqR5ofHhAxZuDy4m3PhSjKFXpw3e', function(err, coins){
  console.log(coins.toString());
});
*/
/*
getUsdForDoge(235987, function(err, coins){
  if (err) throw err;
  console.log(coins.toString());
});
*/

// /q/addressbalance/1EzwoHtiXB4iFwedPr49iywjZn2nnekhoj ?confirmations=6

function getBtcReceivedByAddress(address, fn){
  request.get({
    url: 'https://blockchain.info/q/getreceivedbyaddress/' + address
  }, function(err, res, body){
    if (err) return fn(err);

    try {
      var sts = new Decimal(body);
      var amt = sts.dividedBy(satoshi);
    } catch(e) {
      return fn(e);
    }

    fn(null, amt);
  });
}

function getBtcToUsd(coins, fn){
  request.get({
    url: 'https://coinbase.com/api/v1/prices/sell?qty=' + coins,
    json: true
  }, function(err, res, body){
    if (err) return fn(err);

    try {
      var amt = new Decimal(body.amount);
    } catch(e) {
      return fn(e);
    }

    fn(null, amt);
  });
}
/*
getBitcoinToUsd('0.03', function(err, coins){
  console.log(coins.toString());
});
*/
/*
getBtcReceivedByAddress('19ywYqSQ9vq6drSj6dfY1fjP5Q2ZHv3Ptr', function(err, coins){
  console.log(coins.toString());
})
*/

function getReceived(wallets, fn){
  getDogeReceivedByAddress(wallets.doge, function(err, dogeCoins){
    if (err) return fn(err);

    console.log('doge of %s: %s', wallets.doge, dogeCoins);

    getDogePriceBtc(function(err, dogePriceBtc){
      if (err) return fn(err);

      console.log('doge price btc: %s', dogePriceBtc);

      var dogeBtc = dogePriceBtc.times(dogeCoins);

      console.log('doge -> btc: %s', dogeBtc);

      getBtcReceivedByAddress(wallets.btc, function(err, bitCoins){
        if (err) return fn(err);

        console.log('btc of %s: %s', wallets.btc, bitCoins);

        var totalBtc = dogeBtc.plus(bitCoins);

        console.log('total btc: %s', totalBtc);

        getBtcToUsd(totalBtc, function(err, usd){
          if (err) return fn(err);

          console.log('btc -> usd: %s', usd);

          fn(null, usd);
        });
      });
    });
  });
}

module.exports = function(targetUsd, wallets, fn){
  try {
    targetUsd = new Decimal(targetUsd);
  } catch(e) {
    return fn(e);
  }

  getReceived(wallets, function(err, usd){
    if (err) return fn(err);
    fn(null, {
      usd: Number(usd.toFixed(0)),
      percentage: Number(usd.dividedBy(targetUsd).times(new Decimal(100)).toFixed(0))
    });
  });
};

/*
module.exports(10, {
  doge: 'DKqXMzc5Z9rfph15CHXK37EakorHSkbvxT',
  btc: '15jp26dcFPLvXVKJKThY9dskXh27niN8e9'
}, function(err, data){
  console.log(err);
  console.log(data);
})
*/
/*
getReceived({
  doge: 'DKqXMzc5Z9rfph15CHXK37EakorHSkbvxT',
  btc: '15jp26dcFPLvXVKJKThY9dskXh27niN8e9'
}, function(err, usd){
  if (err) throw err;

  console.log('target usd: %s', targetUsd);
  console.log('remaining usd: %s', targetUsd.minus(usd));
  console.log('percentage: %s%%', usd.dividedBy(targetUsd).times(new Decimal(100)));
});
*/